{"version":3,"sources":["hooks/useKeyPress.js","utilities/colors.js","data/lyrics.js","App.js","utilities/arrays.js","serviceWorker.js","index.js"],"names":["useKeyPress","callback","targetKey","downHandler","key","useEffect","window","addEventListener","removeEventListener","randomColor","redComponent","random","greenComponent","blueComponent","lyrics","line","song","styles","container","height","display","flexDirection","justifyContent","alignItems","backgroundColor","margin","textAlign","fontFamily","color","fontSize","App","arrayLength","useState","length","lyricIndex","setLyricIndex","incrementLyricIndex","intervalId","setInterval","clearInterval","lyricSafeIndex","Math","abs","lyric","delimitedLine","replace","style","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"yLAmBeA,EAjBK,SAACC,EAAUC,GAC7B,IAAMC,EAAc,SAAC,GAAY,EAAVC,MACTF,GACVD,KAIJI,qBAAU,WAGR,OAFAC,OAAOC,iBAAiB,UAAWJ,GAE5B,WACLG,OAAOE,oBAAoB,UAAWL,MAGvC,K,gBCdQM,EAAc,WACzB,IAAMC,EAAeC,IAAO,EAAG,KACzBC,EAAiBD,IAAO,EAAG,KAC3BE,EAAgBF,IAAO,EAAG,KAEhC,MAAM,OAAN,OAAcD,EAAd,YAA8BE,EAA9B,YAAgDC,EAAhD,MCgMaC,EAvMA,CACb,CACEC,KAAM,iCACNC,KAAM,UAER,CACED,KAAM,sBACNC,KAAM,gBAER,CACED,KAAM,qCACNC,KAAM,UAER,CACED,KAAM,sCACNC,KAAM,SAER,CACED,KAAM,+BACNC,KAAM,cAER,CACED,KAAM,yBACNC,KAAM,gBAER,CACED,KAAM,6CACNC,KAAM,SAER,CACED,KAAM,yDACNC,KAAM,OAER,CACED,KAAM,8BACNC,KAAM,WAER,CACED,KAAM,gCACNC,KAAM,yBAER,CACED,KAAM,qCACNC,KAAM,cAER,CACED,KAAM,QACNC,KAAM,OAER,CACED,KAAM,kCACNC,KAAM,UAER,CACED,KAAM,gDACNC,KAAM,qBAER,CACED,KAAM,yCACNC,KAAM,YAER,CACED,KAAM,yCACNC,KAAM,mBAER,CACED,KAAM,6BACNC,KAAM,cAER,CACED,KAAM,wBACNC,KAAM,kBAER,CACED,KAAM,uCACNC,KAAM,eAER,CACED,KAAM,sBACNC,KAAM,gBAER,CACED,KAAM,4BACNC,KAAM,QAER,CACED,KAAM,gCACNC,KAAM,YAER,CACED,KAAM,wBACNC,KAAM,gBAER,CACED,KAAM,4CACNC,KAAM,gBAER,CACED,KAAM,2BACNC,KAAM,iBAER,CACED,KAAM,0BACNC,KAAM,aAER,CACED,KAAM,kCACNC,KAAM,YAER,CACED,KAAM,sBACNC,KAAM,eAER,CACED,KAAM,kCACNC,KAAM,kBAER,CACED,KAAM,+BACNC,KAAM,gBAER,CACED,KAAM,2CACNC,KAAM,mBAER,CACED,KAAM,yCACNC,KAAM,cAER,CACED,KAAM,0CACNC,KAAM,cAER,CACED,KAAM,mCACNC,KAAM,YAER,CACED,KAAM,6BACNC,KAAM,QAER,CACED,KAAM,kDACNC,KAAM,gBAER,CACED,KAAM,mCACNC,KAAM,eAER,CACED,KAAM,6BACNC,KAAM,gBAER,CACED,KAAM,iCACNC,KAAM,WAER,CACED,KAAM,wBACNC,KAAM,SAER,CACED,KAAM,oBACNC,KAAM,wBAER,CACED,KAAM,2BACNC,KAAM,UAER,CACED,KAAM,sCACNC,KAAM,WAER,CACED,KAAM,8BACNC,KAAM,eAER,CACED,KAAM,6BACNC,KAAM,YAER,CACED,KAAM,4BACNC,KAAM,mBAER,CACED,KAAM,iCACNC,KAAM,cAER,CACED,KAAM,oCACNC,KAAM,uBAER,CACED,KAAM,kCACNC,KAAM,cCzJV,IAAMC,EAAS,CACbC,UAAW,CACTC,OAAQ,QACRC,QAAS,OACTC,cAAe,SACfC,eAAgB,SAChBC,WAAY,SACZC,gBAAiB,OAEnBT,KAAM,CACJU,OAAQ,GACRC,UAAW,SACXC,WAAY,SACZC,MAAO,QACPC,SAAU,IAEZb,KAAM,CACJU,UAAW,SACXC,WAAY,YACZC,MAAO,QACPC,SAAU,KAICC,EA7Df,WAAgB,ICHWC,EDGZ,EACuBC,oBCJXD,EDIgCjB,EAAOmB,OCHzDtB,IAAO,EAAGoB,EAAc,KDElB,mBACNG,EADM,KACMC,EADN,KAGPC,EAAsB,WAC1BD,GAAc,SAAAD,GAAU,OAAIA,EAAa,MAO3C7B,qBAAU,WACR,IACMgC,EAAaC,YAAYF,EADD,KAG9B,OAAO,WACLG,cAAcF,MAEf,IAEHrC,EAAYoC,EAAqB,cACjCpC,GAd4B,WAC1BmC,GAAc,SAAAD,GAAU,OAAIA,EAAa,OAaV,aAEjC,IAAMM,EAAiBC,KAAKC,IAAIR,GAAcpB,EAAOmB,OAC/CU,EAAQ7B,EAAO0B,GAEbzB,EAAe4B,EAAf5B,KAAMC,EAAS2B,EAAT3B,KACR4B,EAAgB7B,EAAK8B,QAAQ,KAAM,OAEzC,OACE,yBAAKC,MAAK,eAAO7B,EAAOC,UAAd,CAAyBM,gBAAiBf,OAClD,wBAAIqC,MAAO7B,EAAOF,MAAlB,SAA0B6B,EAA1B,UACA,wBAAIE,MAAO7B,EAAOD,MAAOA,KEzBX+B,QACW,cAA7BzC,OAAO0C,SAASC,UAEe,UAA7B3C,OAAO0C,SAASC,UAEhB3C,OAAO0C,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a","file":"static/js/main.60222e17.chunk.js","sourcesContent":["import { useEffect } from 'react';\r\n\r\nconst useKeyPress = (callback, targetKey) => {\r\n  const downHandler = ({ key }) => {\r\n    if (key === targetKey) {\r\n      callback();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('keydown', downHandler);\r\n\r\n    return () => {\r\n      window.removeEventListener('keydown', downHandler);\r\n    };\r\n    // eslint-disable-next-line\r\n  }, []);\r\n};\r\n\r\nexport default useKeyPress;\r\n","import { random } from './math';\r\n\r\nexport const randomColor = () => {\r\n  const redComponent = random(0, 255);\r\n  const greenComponent = random(0, 255);\r\n  const blueComponent = random(0, 255);\r\n\r\n  return `rgb(${redComponent},${greenComponent},${blueComponent})`;\r\n};\r\n","const lyrics = [\r\n  {\r\n    line: \"Every night fucks every day up\",\r\n    song: \"Nights\"\r\n  },\r\n  {\r\n    line: \"Keep a place for me\",\r\n    song: \"Self Control\"\r\n  },\r\n  {\r\n    line: \"God gave you what you could handle\",\r\n    song: \"Biking\"\r\n  },\r\n  {\r\n    line: \"What if we decide to live by choice\",\r\n    song: \"Higgs\"\r\n  },\r\n  {\r\n    line: \"Moon river wider than a mile\",\r\n    song: \"Moon river\"\r\n  },\r\n  {\r\n    line: \"Running on my mind boy\",\r\n    song: \"Forrest gump\"\r\n  },\r\n  {\r\n    line: \"I'm not him but I'll mean something to you\",\r\n    song: \"Nikes\"\r\n  },\r\n  {\r\n    line: \"I thought that I was dreamin when you said you love me\",\r\n    song: \"Ivy\"\r\n  },\r\n  {\r\n    line: \"This is a cult not a clique\",\r\n    song: \"Channel\"\r\n  },\r\n  {\r\n    line: \"who don't believe in anything\",\r\n    song: \"No church in the wild\"\r\n  },\r\n  {\r\n    line: \"No sleeper seats that's a mattress\",\r\n    song: \"In my room\"\r\n  },\r\n  {\r\n    line: \"Beans\",\r\n    song: \"DHL\"\r\n  },\r\n  {\r\n    line: \"I love the way you make me feel\",\r\n    song: \"Rushes\"\r\n  },\r\n  {\r\n    line: \"A tornado flew around my room before you came\",\r\n    song: \"Thinkin' bout you\"\r\n  },\r\n  {\r\n    line: \"Fuck me good fuck me long fuck me numb\",\r\n    song: \"Novacane\"\r\n  },\r\n  {\r\n    line: \"Now I'm in the lab always working late\",\r\n    song: \"Songs for women\"\r\n  },\r\n  {\r\n    line: \"This is joy this is summer\",\r\n    song: \"Skyline to\"\r\n  },\r\n  {\r\n    line: \"Accept me on Facebook\",\r\n    song: \"Facebook story\"\r\n  },\r\n  {\r\n    line: \"Sluggish lazy stupid and unconcerned\",\r\n    song: \"Be yourself\"\r\n  },\r\n  {\r\n    line: \"Bending up my Nikes\",\r\n    song: \"Pink + White\"\r\n  },\r\n  {\r\n    line: \"Smoking good rolling solo\",\r\n    song: \"Solo\"\r\n  },\r\n  {\r\n    line: \"You text nothin like you look\",\r\n    song: \"Good Guy\"\r\n  },\r\n  {\r\n    line: \"You can't hurt me now\",\r\n    song: \"Pretty Sweet\"\r\n  },\r\n  {\r\n    line: \"Just like me they long to be close to you\",\r\n    song: \"Close to you\"\r\n  },\r\n  {\r\n    line: \"White Ferrari good times\",\r\n    song: \"White Ferrari\"\r\n  },\r\n  {\r\n    line: \"I'd rather live outside\",\r\n    song: \"Seigfried\"\r\n  },\r\n  {\r\n    line: \"I will always love you how I do\",\r\n    song: \"Godspeed\"\r\n  },\r\n  {\r\n    line: \"I'm on Mama I'm on.\",\r\n    song: \"Futura Free\"\r\n  },\r\n  {\r\n    line: \"Was I working just way too hard\",\r\n    song: \"Solo (Reprise)\"\r\n  },\r\n  {\r\n    line: \"Spendin' too much time alone\",\r\n    song: \"Sierra Leone\"\r\n  },\r\n  {\r\n    line: \"Real love  I'm searching for a real love\",\r\n    song: \"Super Rich Kids\"\r\n  },\r\n  {\r\n    line: \"I saw the sky like I never seen before\",\r\n    song: \"Pilot Jone\"\r\n  },\r\n  {\r\n    line: \"You hit them stones and broke your home\",\r\n    song: \"Crack Rock\"\r\n  },\r\n  {\r\n    line: \"Working at  the pyramids tonight\",\r\n    song: \"Pyramids\"\r\n  },\r\n  {\r\n    line: \"Lost in the heat of it all\",\r\n    song: \"Lost\"\r\n  },\r\n  {\r\n    line: \"If it brings me to my knees it's a bad religion\",\r\n    song: \"Bad Religion\"\r\n  },\r\n  {\r\n    line: \"Cotton candy Majin Buu oh oh ohh\",\r\n    song: \"Pink Matter\"\r\n  },\r\n  {\r\n    line: \"Try to find a place for me\",\r\n    song: \"At your best\"\r\n  },\r\n  {\r\n    line: \"Yup duplex in New Orleans east\",\r\n    song: \"Alabama\"\r\n  },\r\n  {\r\n    line: \"Is you Roger or Novak\",\r\n    song: \"Unity\"\r\n  },\r\n  {\r\n    line: \"Comme des Garcons\",\r\n    song: \"Comme des GarÃ§ons\"\r\n  },\r\n  {\r\n    line: \"It takes a mind to worry\",\r\n    song: \"Wither\"\r\n  },\r\n  {\r\n    line: \"Cityview turned to the mountainview\",\r\n    song: \"Hublots\"\r\n  },\r\n  {\r\n    line: \"Akhi tell 'em i ain't goin'\",\r\n    song: \"Slide On Me\"\r\n  },\r\n  {\r\n    line: \"When I'm up they gon' hate\",\r\n    song: \"Sideways\"\r\n  },\r\n  {\r\n    line: \"Hit the road and get rich\",\r\n    song: \"Mitsubushi Sony\"\r\n  },\r\n  {\r\n    line: \"I don't believe in time travel\",\r\n    song: \"We All Try\"\r\n  },\r\n  {\r\n    line: \"There will be tears I've no doubt\",\r\n    song: \"There Will Be Tears\"\r\n  },\r\n  {\r\n    line: \"I'm about to drive in the ocean\",\r\n    song: \"Swim Good\"\r\n  }\r\n];\r\n\r\nexport default lyrics;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useKeyPress } from './hooks';\r\nimport { randomIndex, randomColor } from './utilities';\r\nimport { lyrics } from './data';\r\n\r\nfunction App() {\r\n  const [lyricIndex, setLyricIndex] = useState(randomIndex(lyrics.length));\r\n\r\n  const incrementLyricIndex = () => {\r\n    setLyricIndex(lyricIndex => lyricIndex + 1);\r\n  };\r\n\r\n  const decrementLyricIndex = () => {\r\n    setLyricIndex(lyricIndex => lyricIndex - 1);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const TEN_SECONDS_IN_MILLIS = 1000 * 10;\r\n    const intervalId = setInterval(incrementLyricIndex, TEN_SECONDS_IN_MILLIS);\r\n\r\n    return () => {\r\n      clearInterval(intervalId);\r\n    };\r\n  }, []);\r\n\r\n  useKeyPress(incrementLyricIndex, 'ArrowRight');\r\n  useKeyPress(decrementLyricIndex, 'ArrowLeft');\r\n\r\n  const lyricSafeIndex = Math.abs(lyricIndex) % lyrics.length;\r\n  const lyric = lyrics[lyricSafeIndex];\r\n\r\n  const { line, song } = lyric;\r\n  const delimitedLine = line.replace(/ /g, ' / ');\r\n\r\n  return (\r\n    <div style={{ ...styles.container, backgroundColor: randomColor() }}>\r\n      <h1 style={styles.line}>â{delimitedLine}â</h1>\r\n      <h2 style={styles.song}>{song}</h2>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst styles = {\r\n  container: {\r\n    height: '100vh',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundColor: 'red',\r\n  },\r\n  line: {\r\n    margin: 96,\r\n    textAlign: 'center',\r\n    fontFamily: 'blonde',\r\n    color: 'white',\r\n    fontSize: 50,\r\n  },\r\n  song: {\r\n    textAlign: 'center',\r\n    fontFamily: 'monospace',\r\n    color: 'white',\r\n    fontSize: 35,\r\n  },\r\n};\r\n\r\nexport default App;\r\n","import { random } from './math';\r\n\r\nexport const randomIndex = arrayLength => {\r\n  return random(0, arrayLength - 1);\r\n};\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}